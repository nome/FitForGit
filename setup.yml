---
- name: set up Gogs server
  hosts: server

  roles:
    - role: nome.gogs
      gogs_app_name: FitForGit
      gogs_admin: "{{ admin_user }}"
      gogs_admin_password: "{{ admin_pw }}"
      gogs_bind_addr: 127.0.0.1
      gogs_url: http://{{ ansible_fqdn }}

    - role: jdauphant.nginx
      nginx_sites:
        gogs:
          - listen 80
          - location / { proxy_pass http://127.0.0.1:{{ gogs_http_port }}; }

  post_tasks:
  - name: check whether nginx is running
    local_action: wait_for port=80


- name: set up clients
  hosts: client
  vars:
    workshop_user: "{{ inventory_hostname | regex_replace('[^A-Za-z0-9]', '') | truncate(8, true, '') }}"
  tasks:
  - name: install Git
    package: name=git state=present
  - name: create user account for workshop participant
    user:
      name: "{{ workshop_user }}"
      password: "{{ user_pw|password_hash('sha512') }}"
      generate_ssh_key: yes
      ssh_key_type: "{{ ssh_key_type }}"
  - name: fetch SSH key of user account
    fetch:
      src: /home/{{ workshop_user }}/.ssh/id_{{ ssh_key_type }}.pub
      dest: id_{{ ssh_key_type }}_{{ workshop_user }}.pub
      flat: yes


- name: set up Gogs accounts
  hosts: server

  vars:
    workshop_users: "{{ users | default(groups['client'] | map('regex_replace', '[^A-Za-z0-9]', '') | map('truncate', 8, true, '') | list)}}"

  tasks:
  - name: add your SSH key to admin_user account
    local_action:
      module: gogs_user
      server_url: http://{{ ansible_fqdn }}
      login_user: "{{ admin_user }}"
      login_password: "{{ admin_pw }}"

      name: "{{ admin_user }}"
      sshkey_name: default
      sshkey_file:  "{{ lookup('file', '~/.ssh/id_{{ ssh_key_type }}.pub') }}"
    ignore_errors: yes

  - name: check for user SSH keys
    with_items: "{{ workshop_users }}"
    stat: path=id_{{ ssh_key_type }}_{{ item }}.pub
    register: user_keys

  - name: create Gogs users for workshop participants
    with_items: "{{ workshop_users }}"
    when: (user_keys.results | selectattr('item', 'equalto', item) | first).stat.exists
    local_action:
      module: gogs_user
      server_url: http://{{ ansible_fqdn }}
      login_user: "{{ admin_user }}"
      login_password: "{{ admin_pw }}"

      name: "{{ item }}"
      email: "{{ item }}@localhost.localdomain"
      password: "{{ user_pw }}"
      sshkey_name: default
      sshkey_file: "{{ lookup('file', 'id_' +  ssh_key_type + '_' + item + '.pub') }}"
